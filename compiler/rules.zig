// This will be autogenerated as soon as the compiler works
const pag = @import("pag");

usingnamespace struct {
    pub const file: pag.Rule = &.{
        .{ .syms = &.{ .{ .nt = .ws }, .{ .nt = .rule }, .{ .nt = .file } } },
        .{ .syms = &.{ .{ .nt = .ws }, .end } },
    };

    pub const rule: pag.Rule = &.{
        .{ .syms = &.{
            .{ .nt = .ident },
            .{ .nt = .ws },
            .{ .str = "=" },
            .{ .nt = .ws },
            .{ .nt = .productions },
            .{ .nt = .ws },
            .{ .str = ";" },
        } },
    };
    pub const productions: pag.Rule = &.{
        .{ .syms = &.{
            .{ .nt = .production },
            .{ .nt = .ws },
            .{ .str = "|" },
            .{ .nt = .ws },
            .{ .nt = .productions },
        } },
        .{ .syms = &.{.{ .nt = .production }} },
    };
    pub const production: pag.Rule = &.{
        .{ .syms = &.{ .{ .nt = .symbols }, .{ .nt = .ws }, .{ .nt = .func } } },
    };
    pub const symbols: pag.Rule = &.{
        .{ .syms = &.{ .{ .nt = .symbol }, .{ .nt = .ws }, .{ .nt = .symbols } } },
        .{ .syms = &.{} },
    };
    pub const symbol: pag.Rule = &.{
        .{ .syms = &.{.{ .nt = .ident }} },
        .{ .syms = &.{.{ .nt = .string }} },
        .{ .syms = &.{.{ .nt = .set }} },
        .{ .syms = &.{.{ .nt = .end }} },
    };

    pub const func: pag.Rule = &.{
        .{ .syms = &.{ .{ .str = "@" }, .{ .nt = .zig_ident } } },
        .{ .syms = &.{} },
    };
    pub const zig_ident: pag.Rule = &.{
        .{ .syms = &.{ .{ .nt = .zig_ident_first_char }, .{ .nt = .zig_ident_rest } } },
    };
    pub const zig_ident_rest: pag.Rule = &.{
        .{ .syms = &.{ .{ .nt = .zig_ident_char }, .{ .nt = .zig_ident_rest } } },
        .{ .syms = &.{} },
    };
    pub const zig_ident_first_char: pag.Rule = &.{
        .{ .syms = &.{
            .{ .set = &pag.SetBuilder.init()
                .addRange('a', 'z')
                .addRange('A', 'Z')
                .add("_")
                .set },
        } },
    };
    pub const zig_ident_char: pag.Rule = &.{
        .{ .syms = &.{
            .{ .set = &pag.SetBuilder.init()
                .addRange('a', 'z')
                .addRange('A', 'Z')
                .addRange('0', '9')
                .add("_")
                .set },
        } },
    };

    pub const ident: pag.Rule = &.{
        .{ .syms = &.{ .{ .nt = .ident_char }, .{ .nt = .ident } } },
        .{ .syms = &.{.{ .nt = .ident_char }} },
    };
    pub const ident_char: pag.Rule = &.{
        .{ .syms = &.{
            .{ .set = &pag.SetBuilder.init()
                .addRange('a', 'z')
                .addRange('A', 'Z')
                .addRange('0', '9')
                .add("?!_-")
                .set },
        } },
    };

    pub const string: pag.Rule = &.{
        .{ .syms = &.{ .{ .str = "\"" }, .{ .nt = .string_chars }, .{ .str = "\"" } } },
    };
    pub const string_chars: pag.Rule = &.{
        .{ .syms = &.{ .{ .nt = .string_char }, .{ .nt = .string_chars } } },
        .{ .syms = &.{} },
    };
    pub const string_char: pag.Rule = &.{
        .{ .syms = &.{
            .{ .set = &pag.SetBuilder.init()
                .add("\\\"")
                .invert()
                .set },
        } },
        .{ .syms = &.{
            .{ .str = "\\" },
            .{ .nt = .string_char_escaped },
        } },
    };
    pub const string_char_escaped: pag.Rule = &.{
        .{ .syms = &.{
            .{ .set = &pag.SetBuilder.init()
                .add("\\\"")
                .set },
        } },
        .{ .syms = &.{
            .{ .str = "x" },
            .{ .nt = .hexdig },
            .{ .nt = .hexdig },
        } },
    };

    pub const set: pag.Rule = &.{
        .{ .syms = &.{ .{ .str = "[" }, .{ .nt = .set_entries }, .{ .str = "]" } } },
    };
    pub const set_entries: pag.Rule = &.{
        .{ .syms = &.{ .{ .nt = .set_entry }, .{ .nt = .set_entries } } },
        .{ .syms = &.{.{ .nt = .set_entry }} },
    };
    pub const set_entry: pag.Rule = &.{
        .{ .syms = &.{ .{ .nt = .set_char }, .{ .str = "-" }, .{ .nt = .set_char } } },
        .{ .syms = &.{.{ .nt = .set_char }} },
    };
    pub const set_char: pag.Rule = &.{
        .{ .syms = &.{
            .{ .set = &pag.SetBuilder.init()
                .add("[]\\")
                .invert()
                .set },
        } },
        .{ .syms = &.{
            .{ .str = "\\" },
            .{ .nt = .set_char_escaped },
        } },
    };
    pub const set_char_escaped: pag.Rule = &.{
        .{ .syms = &.{
            .{ .set = &pag.SetBuilder.init()
                .add("[]\\")
                .set },
        } },
        .{ .syms = &.{
            .{ .str = "x" },
            .{ .nt = .hexdig },
            .{ .nt = .hexdig },
        } },
    };

    pub const ws: pag.Rule = &.{
        .{ .syms = &.{
            .{ .set = &pag.SetBuilder.init()
                .add(" \t\n")
                .set },
            .{ .nt = .ws },
        } },
        .{ .syms = &.{
            .{ .str = "//" },
            .{ .nt = .comment },
            .{ .str = "\n" },
            .{ .nt = .ws },
        } },
        .{ .syms = &.{} },
    };
    pub const comment: pag.Rule = &.{
        .{ .syms = &.{
            .{ .set = &pag.SetBuilder.init()
                .add("\n")
                .invert()
                .set },
            .{ .nt = .comment },
        } },
        .{ .syms = &.{} },
    };

    pub const hexdig: pag.Rule = &.{
        .{ .syms = &.{
            .{ .set = &pag.SetBuilder.init()
                .addRange('0', '9')
                .addRange('a', 'f')
                .addRange('A', 'F')
                .set },
        } },
    };

    pub const end: pag.Rule = &.{.{ .syms = &.{.{ .str = "$" }} }};
};
